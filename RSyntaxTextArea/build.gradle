import static org.gradle.api.JavaVersion.*

['osgi', 'distribution', 'maven-publish', 'signing'].each { apply plugin: it }
// Jacoco and a coveralls upload plugin needed for publishing coverage results
['jacoco', 'com.github.kt3k.coveralls'].each { apply plugin: it }

// We require building with JDK 8 or later.  We turn off doclint since our
// generated *TokenMakers have horrible documentation (see https://github.com/jflex-de/jflex/issues/182)
assert current().isJava8Compatible()
allprojects {
	tasks.withType(Javadoc) {
		options.addStringOption('Xdoclint:none', '-quiet')
	}
}

archivesBaseName = 'rsyntaxtextarea'

// Add coveralls plugin to this build's classpath
buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.2'
	}
}

jacocoTestReport {
	reports {
		xml.enabled = true // coveralls plugin depends on xml format report
		html.enabled = true
	}
}

ext.sharedManifest = manifest {
	attributes('Specification-Title': 'RSyntaxTextArea',
		'Specification-Version': version,
		'Implementation-Title': 'org.fife.ui',
		'Implementation-Version': version,
		// Not sure why Require-Capability is not being added by the osgi plugin...
		'Require-Capability': 'osgi.ee;filter:="(&(osgi.ee=JavaSE)(version=' + javaVersion + '))"')
}
jar {
	manifest { from sharedManifest }
}

// We use "distributions" to create the zip files uploaded to SourceForge
distributions {
	main {
		baseName = 'rsyntaxtextarea'
		contents {
			from { [ 'build/libs', 'distfiles' ] }
			rename 'RSyntaxTextArea-.*\\.jar', 'rsyntaxtextarea.jar'
		}
	}
	src {
		baseName = 'rsyntaxtextarea'
	}
}
distZip.classifier = null
distZip.dependsOn jar
srcDistZip.classifier = 'src'
srcDistZip {
	from projectDir
	include 'src/**/*'
	include 'build.gradle'
	include '.classpath'
	include '.project'
	include 'gradle.properties'
	include 'gradle/**/*'
	include 'gradlew*'
	include 'README.md'
	include '.settings/**'
}

task buildSourceForgeZips {
    doFirst {
        println 'Building zip files for SourceForge'
    }
}
buildSourceForgeZips.dependsOn clean, jar, distZip, srcDistZip

// Stuff to generate and upload Maven artifacts
task javadocJar (type: Jar, dependsOn: javadoc) {
	manifest { from sharedManifest }
	classifier = 'javadoc'
	from javadoc.destinationDir
}
task sourceJar (type: Jar) {
	manifest { from sharedManifest }
	classifier = 'sources'
	from sourceSets.main.allSource
}
artifacts {
	archives jar, javadocJar, sourceJar
}
signing {
	// Don't require signing for e.g. ./gradlew install
	//required { gradle.taskGraph.hasTask("uploadArchives") }
	sign configurations.archives
}
repositories {
	mavenCentral()
}
publishing {

    repositories {
        maven {
            def releasesRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
            def snapshotsRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
            println "... ${ossrhUsername}, ${ossrhPassword}"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username ossrhUsername
                password ossrhPassword
            }
        }
    }

    publications {
        mavenJava(MavenPublication) {

            groupId = group
            artifactId = 'rsyntaxtextarea'

            pom {
                name = 'rsyntaxtextarea'
                description = 'RSyntaxTextArea is the syntax highlighting text editor for Swing applications. ' +
                        'Features include syntax highlighting for 40+ languages, code folding, code completion, ' +
                        'regex find and replace, macros, code templates, undo/redo, line numbering and bracket ' +
                        'matching.'
                url = 'http://www.fifesoft.com/rsyntaxtextarea/'
                licenses {
                    license {
                        name = 'Modified BSD License'
                        url = 'http://fifesoft.com/rsyntaxtextarea/RSyntaxTextArea.License.txt'
                    }
                }
                developers {
                    developer {
                        name = 'Robert Futrell'
                        url = 'http://www.fifesoft.com'
                        organization = 'Fifesoft' /* https://issues.gradle.org/browse/GRADLE-1200 */
                        organizationUrl = 'http://www.fifesoft.com/'
                    }
                }
                scm {
                    url = 'https://github.com/bobbylight/RSyntaxTextArea'
                    connection = 'scm:git:git://github.com/bobbylight/RSyntaxTextArea'
                    developerConnection = 'scm:git:git@github.com:bobbylight/RSyntaxTextArea'
                    if (!project.version.endsWith('-SNAPSHOT')) {
                        tag = project.version
                    }
                }
            }
        }
    }
}
